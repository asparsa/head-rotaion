# -*- coding: utf-8 -*-
"""Data prepation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BREWl0_WRLTP8m9bbvsjvzTvAgpeVDY4
"""

!wget http://data.vision.ee.ethz.ch/cvl/gfanelli/kinect_head_pose_db.tgz

# Commented out IPython magic to ensure Python compatibility.
# %cd data/

!ls

!tar -xvf  '/content/drive/MyDrive/kinect_head_pose_db.tgz' -C '/content/drive/MyDrive/kinect'

import shutil
import os
def copy_data(num_fol):
  fold='/content/drive/MyDrive/kinect/hpdb/'+num_fol
  rgb='rgb'
  pose='pose'
  for root, dirs, files in sorted(os.walk(fold, topdown=False)):
    for name in files:
      if name.endswith(".png"):
        shutil.copyfile(fold+'/'+name, "/content/drive/MyDrive/data/"+ num_fol+name)
      if name.endswith(".txt"):
        shutil.copyfile(fold+'/'+name, "/content/drive/MyDrive/data/"+ num_fol+name)

for i in range (1,24):
  if i<10:
    copy_data('0'+str(i))
  else:
    copy_data(str(i))

copy_data('24')

# Commented out IPython magic to ensure Python compatibility.
from tensorflow import keras
#import keras_tuner as kt
import tensorflow as tf
from keras import models
import keras
from keras import layers
from numpy import genfromtxt
import matplotlib.pyplot as plt
import numpy as np
from sklearn.utils import shuffle
import matplotlib.pyplot as plt
import seaborn as sns
import os
import cv2 as cv
from scipy.spatial.transform import Rotation as R
import random
# %load_ext tensorboard
base  = tf.keras.applications.MobileNetV3Small(
weights='imagenet',
include_top=False,
input_shape=(None, None, 3))
mae = tf.keras.losses.MeanAbsoluteError()
mse = tf.keras.losses.MeanSquaredError()
import scipy.io
# %load_ext tensorboard

import tensorflow as tf
from keras import models
import keras
from keras import layers
tf.random.set_seed(53)
#from keras_applications.mobilenet_v3 import MobileNetV3
base  = tf.keras.applications.MobileNetV3Small(
weights='imagenet',
include_top=False,
input_shape=(None, None, 3))
model3 = models.Sequential()
model3.add(base)
model3.add(layers.GlobalMaxPooling2D())
model3.add(layers.Flatten())
model3.add(layers.Dense(9, activation='tanh'))
model3.add(layers.Dense(3))
model3.build(input_shape=(1,None, None, 3))
model3.summary()

dir1='/content/drive/MyDrive/image'
dir2='/content/drive/MyDrive/label'
tf.keras.preprocessing.image_dataset_from_directory(dir1,labels=dir2,label)